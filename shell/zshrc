# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
OS=$(~/dotfiles/utils/detectos.sh)

[[ $UID = 0 ]] && ZSH_DISABLE_COMPFIX=true

HISTSIZE=10000000
SAVEHIST=10000000

setopt BANG_HIST                 # Treat the '!' character specially during expansion.
# setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# Linux only
if [ "${OS}" = "LINUX" ] ; then
  case "$(uname -o)" in
    Android*) OS_TYPE=ANDROID ;;
    *)        OS_TYPE=LINUX ;;
  esac
  if [ "${OS_TYPE}" = "ANDROID" ] ; then
    PATH=~/dotfiles/bin/peco_linux_arm64:$PATH
  else
    PATH=~/dotfiles/bin/peco_linux_amd64:$PATH
  fi
fi

if [ "${OS_TYPE}" = "LINUX" ] ; then
  OS_ID=$(cat /etc/os-release | grep 'ID=' | sed 's/ID=//')
fi

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="bureau"
#ZSH_THEME="blinks"
#ZSH_THEME="spaceship"
if [ "${TERM_PROGRAM}" = "vscode" ] || [ "${TERM_PROGRAM}" = "Apple_Terminal" ] ; then
  ZSH_THEME="spaceship"
else
  POWERLEVEL9K_MODE="nerdfont-complete"
  ZSH_THEME="powerlevel10k/powerlevel10k"
fi

if [ "${COLORTERM}" = "rxvt" ] ; then
  export TERM=xterm-256color
fi
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Should be placed before nvm plugins
# Mac OS only
if [ "${OS}" = "OSX" ] ; then
  export NVM_DIR="$HOME/.nvm"
  . "/usr/local/opt/nvm/nvm.sh"
  export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
fi

if [ "${OS_ID}" = "manjaro" ] ; then
  export NVM_DIR="$HOME/.nvm"
  source /usr/share/nvm/init-nvm.sh
fi


# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=$HOME/.custom

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# Mac OS only
if [ "${OS}" = "OSX" ] ; then
  plugins=(dotenv git osx bundler pgex dirs docker docker-compose nvm yarn tmux zsh-autosuggestions fasd zsh-peco-history pyenv rbenv vscode jenv golang z kubectl zsh-syntax-highlighting)
  # Original MacBookPro plugin set
  # plugins=(asdf git bundler osx rake ruby railsex pgex heroku dirs docker docker-compose nvm tmux zsh-autosuggestions fasd zsh-peco-history)
fi

# Linux only
if [ "${OS}" = "LINUX" ] ; then
#  plugins=(git railsex pgex heroku dirs docker docker-compose tmux zsh-autosuggestions zsh-peco-history z)
  plugins=(git railsex pgex dirs docker docker-compose tmux zsh-autosuggestions zsh-peco-history z zsh-syntax-highlighting)
fi

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

export PATH="$HOME/.bin:$PATH"
# REPLACE WITH ACTUAL TOKEN. Create file .token in home dir
# export HOMEBREW_GITHUB_API_TOKEN=""
if [ -f $HOME/.token ] ; then
  . $HOME/.token
fi

if [ -d $HOME/projects/go ] ; then
  export GOPATH=$HOME/projects/go
  export PATH=$GOPATH/bin:$PATH
fi

export XML_CATALOG_FILES="/usr/local/etc/xml/catalog"

export EDITOR="$(which vim)"

if [ -d $HOME/.jenv ] ; then
  eval "$(jenv init -)"
fi
# Spaceship theme settings START
# PROMPT
SPACESHIP_CHAR_SYMBOL=' '
SPACESHIP_PROMPT_ADD_NEWLINE=true
SPACESHIP_PROMPT_SEPARATE_LINE=true
SPACESHIP_PROMPT_TRUNC=0
SPACESHIP_USER_SHOW=always
SPACESHIP_HOST_SHOW=always
SPACESHIP_EXIT_CODE_SHOW=true

# GIT
SPACESHIP_GIT_SHOW=true
SPACESHIP_GIT_UNCOMMITTED='+'
SPACESHIP_GIT_UNSTAGED='!'
SPACESHIP_GIT_UNTRACKED='?'
SPACESHIP_GIT_STASHED='$'
SPACESHIP_GIT_UNPULLED='⇣'
SPACESHIP_GIT_UNPUSHED='⇡'

# NVM
SPACESHIP_NVM_SHOW=true
SPACESHIP_NVM_SYMBOL='NodeJS'

# RUBY
SPACESHIP_RUBY_SHOW=true
SPACESHIP_RUBY_SYMBOL='Ruby'

# VENV
SPACESHIP_VENV_SHOW=true

# VI_MODE
SPACESHIP_VI_MODE_SHOW=false
SPACESHIP_VI_MODE_INSERT="[I]"
SPACESHIP_VI_MODE_NORMAL="[N]"

# Spacehip theme settings END

# Powerline plugins
#if [ -d "$HOME/Library/Python/2.7/bin" ]; then
#  PATH="$HOME/Library/Python/2.7/bin:$PATH"
#fi
#. ~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/zsh/powerline.zsh

#Mac OS Only START
if [ "${OS}" = "OSX" ] ; then
  test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

  # Android SDK Root
  export ANDROID_SDK_ROOT="$HOME/Library/Android/sdk"
  export PATH="$ANDROID_SDK_ROOT/platform-tools:$PATH"
  export PATH=$PATH:/Applications/Araxis\ Merge.app/Contents/Utilities
  #export PATH="/usr/local/opt/postgresql@9.4/bin:$PATH"

  #source $HOME/.asdf/asdf.sh
  #source $HOME/.custom/plugins/asdf/asdf.bash
fi
## Mac OS Only END

if [ -d "~/.pyenv/bin" ] ; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
  if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi
fi

export PATH="$HOME/.cargo/bin:/usr/local/bin:/usr/local/sbin:$HOME/.local/bin:$HOME/.dotnet/tools:$PATH"

export MINIKUBE_WANTUPDATENOTIFICATION=false
export MINIKUBE_WANTREPORTERRORPROMPT=false
export MINIKUBE_HOME=$HOME
export CHANGE_MINIKUBE_NONE_USER=true
export KUBECONFIG=$HOME/.kube/config

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# POWERLEVEL9K_PROMPT_ON_NEWLINE=true
# POWERLEVEL9K_RPROMPT_ON_NEWLINE=false
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=" "
POWERLEVEL9K_CARRIAGE_RETURN_ICON=""
POWERLEVEL9K_FAIL_ICON=""
POWERLEVEL9K_NODE_ICON=""
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon context dir dir_writable newline)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status vcs root_indicator ssh background_jobs node_version virtualenv pyenv rbenv newline)
if [ "${ITERM_PROFILE}" = "Default Lite Theme" ] ; then
  # POWERLEVEL9K_COLOR_SCHEME='dark'
  POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND='grey70'
  POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND='grey7'
fi


